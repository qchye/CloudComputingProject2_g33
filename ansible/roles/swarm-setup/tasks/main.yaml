# Project           : Gig Economy and its impact in Australia
# Team              : Group 33
# City              : Melbourne, Australia
# Authors           : Qing Feng Chye 770376, Sii Kim Lau 890511, Rohan Jahagirdar 835450
#                     Yun Liu 1046589, Shorye Chopra 689913
# Purpose           : Install docker other required packages 
---
- name: Install the Python SNI support packages.
  package:
    name: "{{ python_sni_support_packages }}"
    state: present

- name: Uninstall old versions of docker
  tags: 'docker'
  become: yes
  apt:
    name: ['docker', 'docker-engine', 'docker.io']
    state: absent

- name: Add Docker apt repository key
  tags: 'docker'
  become: yes
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add Docker apt repository and update apt cache
  tags: 'docker'
  become: yes
  apt_repository:
    repo: "deb https://download.docker.com/linux/{{ ansible_distribution|lower }} {{ ansible_distribution_release }} stable"
    mode: '644'
    update_cache: yes
    state: present

- name: Install docker
  tags: 'docker'
  become: yes
  apt:
    name: ['docker-ce']
    state: latest
    install_recommends: no
    update_cache: yes

- block:
  
  - name: Create the systemd overrides directory for Docker.
    file:
      name: "/etc/systemd/system/docker.service.d"
      state: directory

  - name: Add the proxy settings for Docker.
    template:
      src: docker-proxy.conf.j2
      dest: "/etc/systemd/system/docker.service.d/http-proxy.conf"
    register: _docker_proxy

  - name: Create docker client directory
    become: yes
    file:
      path: "{{ docker_client_directory }}"
      recurse: yes
      state: directory
  
  - name: Add the proxy settings for docker client.
    template:
      src: docker-client.json.j2
      dest: "{{ docker_client_directory }}/config.json"
    register: _docker_proxy_client

  - name: Reload systemd and restart Docker.
    service:
      name: docker
      state: "{% if docker_service_state != 'stopped' %}restarted{% else %}stopped{% endif %}"
      daemon_reload: yes
    when: _docker_proxy.changed or _docker_proxy_client.changed

  when: docker_proxy | length > 0
    and ansible_service_mgr == 'systemd'

- name: Install the Docker CLI.
  package:
    name: "{{ docker_cli_package_name }}{{ _docker_cli_package_version | default('') }}"
    state: "{{ docker_cli_package_state }}"

# Setup the Docker Swarm Cluster
- block:
  - include_tasks: setup-swarm-cluster.yaml

- name: Install docker-py.
  pip:
    name: "{{ docker_py_package_name }}"
    version: "{{ docker_py_package_version }}"
    state: "{{ docker_py_package_state }}"

- name: Install docker-compose
  tags: 'docker'
  become: yes
  pip:
    name: ['docker-compose']
    state: latest

- name: Assign labels to swarm nodes if any.
  command: docker node update --label-add type=backend --label-add ip={{hostvars[inventory_hostname]['ansible_default_ipv4']['address']}} {{ ansible_hostname|lower }}
  when: " 'backend_nodes' in group_names"
  delegate_to: "{{ groups['docker_swarm_manager'][0] }}"
  delegate_facts: true